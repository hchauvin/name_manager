version: 2.1

executors:
  vs2019:
    description: >
      An executor preloaded with visual studios 2019 plus a number of other
      development tools.
    parameters:
      version:
        type: string
        description: The image version to use when executing. Defaults to "201908-06"
        default: "stable"
      shell:
        type: string
        description: >
          The shell to use.
          Defaults to `powershell.exe -ExecutionPolicy Bypass`
        default: powershell.exe -ExecutionPolicy Bypass
    machine:
      image: "windows-server-2019-vs2019:<< parameters.version >>"
      resource_class: windows.medium
      shell: << parameters.shell >>

jobs:
  test-linux:
    docker:
      - image: circleci/golang:1.13
        environment:
          MONGODB_URI: "mongodb://127.0.0.1:27017"
      - image: circleci/mongo:4.2.3
    steps:
      - checkout
      - run:
          name: Gofmt
          command: |
            badFormat=$(gofmt -l .)
            if [ ! -z "$badFormat" ]; then
              echo "ERROR: gofmt: bad format:\n$badFormat"
              exit 1
            fi
      - run: go test -v ./pkg/...
      - run:
          name: Build CLI
          command: |
            mkdir bin
            go build -o bin/name_manager github.com/hchauvin/name_manager/cmd/name_manager
      - run:
          name: Examples
          command: |
            examples/simple.sh
            go run ./examples/hold
            go test ./examples/...
      - run:
          name: Code coverage
          command: |
            go test -v -covermode=count -coverprofile=coverage.out ./... -coverpkg=./pkg/...
            go install github.com/mattn/goveralls
            goveralls -coverprofile=coverage.out -service=circleci-ci -repotoken=$COVERALLS_TOKEN
      - persist_to_workspace:
          root: '.'
          paths:
            - bin
  test-linux-docker-compose:
    machine: true
    steps:
      - checkout
      - attach_workspace:
          at: '.'
      - run:
          name: Examples
          command: |
            examples/docker_compose.sh
  test-darwin:
    macos:
      xcode: 9.3.0
    steps:
      - checkout
      - run:
          name: Install Go
          command: |
            GOLANG_VERSION=1.13.1
            goRelArch=darwin-amd64
            url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"
            curl -L $url | tar -C ~ -xzf -
      - run: ~/go/bin/go test -v ./pkg/...
      - run:
          name: Build CLI
          command: |
            mkdir bin
            ~/go/bin/go build -o bin/name_manager github.com/hchauvin/name_manager/cmd/name_manager
      - run:
          name: Examples
          command: |
            examples/simple.sh
            ~/go/bin/go run ./examples/hold
  test-windows:
    executor:
      name: vs2019
    steps:
      - checkout
      - run: choco install mingw # for cgo
      - run: go test -v ./pkg/...
      - run:
          name: Build CLI
          command: |
            mkdir bin
            go build -o bin/name_manager.exe github.com/hchauvin/name_manager/cmd/name_manager
      - run:
          name: Examples
          # TODO: Run additional examples on Windows
          command: |
            go run ./examples/hold
  release:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run: curl -sL https://git.io/goreleaser | bash

workflows:
  main:
    jobs:
      - test-linux:
          filters:
            tags:
              only: /^v.*/
      - test-linux-docker-compose:
          requires:
            - test-linux
          filters:
            tags:
              only: /^v.*/
      - test-darwin:
          filters:
            tags:
              only: /^v.*/
      - test-windows:
          filters:
            tags:
              only: /^v.*/
      - release:
          requires:
            - test-linux
            - test-linux-docker-compose
            - test-darwin
            - test-windows
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
